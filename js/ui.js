import { GENERATIONS } from './constants.js'; // Importa as constantes
import { getGenerationByID } from './api.js';

export function createPokemonCard(pokemon) { const card = document.createElement('div'); card.className = 'pokemon-card'; card.innerHTML = ` <img src="${pokemon.image}" alt="${pokemon.name}" loading="lazy"> <div class="pokemon-number">#${String(pokemon.id).padStart(3, '0')}</div> <div class="pokemon-name">${pokemon.name}</div> <div class="pokemon-types"> ${pokemon.types.map(type => `<span class="type ${type}">${type}</span>`).join('')} </div> <div class="generation-badge">${GENERATIONS[getGenerationByID(pokemon.id)]?.name || 'Kanto'}</div> `; return card; }
export function createDetailsModal(details, modalContainer) { const primaryType = details.types[0].type.name; modalContainer.innerHTML = `<div class="modal"><div class="modal-content type-${primaryType}"></div></div>`; const modalContent = modalContainer.querySelector('.modal-content'); modalContent.innerHTML = `<span class="modal-close-button">&times;</span><div class="modal-header"><h2 class="modal-pokemon-name">${details.name}</h2><span class="modal-pokemon-number">#${String(details.id).padStart(3, '0')}</span></div><div class="modal-body"></div>`; modalContent.querySelector('.modal-body').innerHTML = `<img class="modal-pokemon-image" src="${details.sprites.other['official-artwork']?.front_default || details.sprites.front_default}" alt="${details.name}"><div class="modal-pokemon-info"><div class="modal-pokemon-types">${details.types.map(t => `<span class="type ${t.type.name}">${t.type.name}</span>`).join('')}</div><div class="pokemon-stats">${details.stats.map(s => `<div class="stat-row"><span class="stat-name">${s.stat.name.replace(/-/g, ' ')}</span><div class="stat-bar-container"><div class="stat-bar" style="width: ${Math.min(s.base_stat, 150)}px;">${s.base_stat}</div></div></div>`).join('')}</div></div>`; modalContainer.classList.add('visible'); modalContainer.querySelector('.modal-close-button').addEventListener('click', () => closeModal(modalContainer)); modalContainer.addEventListener('click', (e) => { if (e.target.classList.contains('modal')) closeModal(modalContainer); }); }
export function closeModal(modalContainer) { modalContainer.classList.remove('visible'); }
export function showLoader(pokedexContainer) { pokedexContainer.innerHTML = ''; const skeletonCount = 12; for (let i = 0; i < skeletonCount; i++) { const card = document.createElement('div'); card.className = 'skeleton-card'; card.innerHTML = `<div class="skeleton skeleton-image"></div><div class="skeleton skeleton-text"></div><div class="skeleton skeleton-text skeleton-text-small"></div>`; pokedexContainer.appendChild(card); } }
export function displayError(message, pokedexContainer) { pokedexContainer.innerHTML = `<div class="error-message-inline">${message}</div>`; }
export function updateHeaderTitle(gen) { document.querySelector('header h1').textContent = `Pokedex - ${GENERATIONS[gen]?.name || 'Todas'}`; }
export function setupTheme(themeToggleButton) { const currentTheme = localStorage.getItem('theme') || 'dark'; document.documentElement.setAttribute('data-theme', currentTheme); themeToggleButton.innerHTML = currentTheme === 'light' ? 'üåô' : '‚òÄÔ∏è'; themeToggleButton.addEventListener('click', () => { let newTheme = document.documentElement.getAttribute('data-theme') === 'dark' ? 'light' : 'dark'; document.documentElement.setAttribute('data-theme', newTheme); localStorage.setItem('theme', newTheme); themeToggleButton.innerHTML = newTheme === 'light' ? 'üåô' : '‚òÄÔ∏è'; }); }